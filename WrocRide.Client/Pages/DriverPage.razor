@page "/driver/{id}"
@inject IDriverService DriverService
@inject ICarService CarService

<h3 class="text-center" style="margin-top: 20px">Kierowca Id: @Id</h3>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    Informacje o kierowcy
                </div>
                <div class="card-body">
                    <p><strong>Imię:</strong> @driver.Name</p>
                    <p><strong>Nazwisko:</strong> @driver.Surename</p>
                    <p><strong>Średnia ocena:</strong> @driver.Rating</p>
                    <p><strong>Cena za kilometr:</strong> @driver.Pricing zł</p>
                    <p><strong>Status:</strong> @driver.DriverStatus</p>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    Informacje o pojeździe
                </div>
                <div class="card-body">
                    <p><strong>Tablica rejestracyjna:</strong> @car.LicensePlate</p>
                    <p><strong>Marka:</strong> @car.Brand</p>
                    <p><strong>Model:</strong> @car.Model</p>
                    <p><strong>Kolor:</strong> @car.BodyColor</p>
                    <p><strong>Rok produkcji:</strong> @car.YearProduced</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <h4 class="text-center">Opinie kierowcy</h4>
            <div class="list-group">
                @if (ratings.Items.Any())
                {
                    @foreach (var rating in ratings.Items)
                    {
                        <div class="list-group-item">
                            <h5 class="mb-1">@rating.ClientName @rating.ClientSurename ocenił(a) na @rating.Grade/5</h5>
                            <p class="mb-1">@rating.Comment</p>
                            <small>Dodano: @rating.CreatedAt.ToString("yyyy-MM-dd HH:mm")</small>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-warning text-center" role="alert">
                        Brak opinii dla tego kierowcy.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-center mt-4 pagination-component">
    <PaginationComponent PagedData="ratings" OnPageChange="LoadRatings" />
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    DriverDto driver = new();
    CarDto car = new();

    private PagedList<RatingDto> ratings = new PagedList<RatingDto>(new List<RatingDto>(), 5, 1, 0);
    private int _currentPage = 1;
    private int _pageSize = 5;

    protected override async Task OnInitializedAsync()
    {
        int id = DriverId();

        var driverResponse = await DriverService.GetById(id);
        var carResponse = await CarService.GetCar(id, driverResponse.CarId);

        driver = driverResponse;
        car = carResponse;

        await LoadRatings(_currentPage);
    }

    private async Task LoadRatings(int pageNumber)
    {
        int id = DriverId();
        var response = await DriverService.GetRatings(id, _pageSize, pageNumber);
        ratings = response;
    }

    private int DriverId()
    {
        int id = int.Parse(Id);

        return id;
    }
}
