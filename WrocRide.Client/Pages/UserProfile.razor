@page "/me"
@inject IUserService UserService
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<UpdateUserProfileComponent IsUpdateModalVisible="@showUpdateModal" IsUpdateModalVisibleChanged="HandleModalToggle"/>

<div class="d-flex justify-content-center" style="height: 100vh; margin-top: 20px">
    <div class="row rounded bg-light shadow p-4" style="width: 500px; height: 500px; overflow: hidden;">
        <div class="col-12 text-center mb-3">
            <img src="images/avatar.png" alt="..." class="rounded-circle img-fluid" style="width: 170px; height: 170px;">
        </div>
        <div class="col-12">
            <ul class="list-unstyled mb-0 text-center">
                <li class="mb-2"><span class="text-secondary fw-bold">Id:</span> @_user.Id</li>
                <li class="mb-2"><span class="text-secondary fw-bold">Name:</span> @_user.Name</li>
                <li class="mb-2"><span class="text-secondary fw-bold">Surename:</span> @_user.Surename</li>
                <li class="mb-2"><span class="text-secondary fw-bold">Email:</span> @_user.Email</li>
                <li class="mb-2"><span class="text-secondary fw-bold">Phone:</span> @_user.PhoneNumber</li>
                <li class="mb-2"><span class="text-secondary fw-bold">Role:</span> @_user.Role</li>
                <li class="mb-2"><span class="text-secondary fw-bold">Join at:</span> @_user.JoinAt</li>
            </ul>
        </div>
        <div class="d-flex justify-content-center justify-content-md-between py-3">
            <button class="btn btn-danger" @onclick="DeactivateAccount">Usuń konto</button>
            <button class="btn btn-primary" @onclick="() => showUpdateModal = true"> Edytuj </button>
        </div>
    </div>
</div>

@code {
    private UserDto _user = new();
    private bool showUpdateModal = false;

    protected override async Task OnInitializedAsync()
    {
        _user = await UserService.GetUser();
    }

    private void HandleModalToggle(bool show)
    {
        showUpdateModal = show;
    }

    private async Task DeactivateAccount()
    {
        await UserService.DeactivateAccount();
        await AuthenticationService.Logout();
        NavigationManager.NavigateTo("/login");
    }
}
